# Generated by Django 3.1.4 on 2020-12-03 11:41

import challenges.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import django.utils.timezone


def noop(_apps, _schema_editor):
    pass



class Migration(migrations.Migration):

    replaces = [('challenges', '0001_initial'), ('challenges', '0002_challengeprocess_running'), ('challenges', '0003_auto_20200514_1559'), ('challenges', '0004_auto_20200519_1453'), ('challenges', '0005_auto_20200519_1517'), ('challenges', '0007_challenge_container'), ('challenges', '0008_auto_20200519_1556'), ('challenges', '0009_auto_20200526_1010'), ('challenges', '0006_create_ports'), ('challenges', '0007_challengeprocess_started'), ('challenges', '0008_auto_20200608_1222'), ('challenges', '0009_auto_20201203_0934'), ('challenges', '0010_challenge_listen_ports')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('solution', models.TextField()),
                ('container', models.CharField(default='echo', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completion_time', models.DateTimeField(blank=True, null=True)),
                ('writeup', models.TextField(blank=True, null=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='challenges.challenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('settings', models.JSONField(default=challenges.models.random_settings)),
            ],
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('port', models.PositiveIntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeProcess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('challenge_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='challenges.challengeentry')),
                ('running', models.BooleanField(default=False)),
                ('port', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='challenges.port')),
                ('process_identifier', models.TextField(default='test')),
            ],
        ),
        migrations.RunPython(
            code=noop,
            reverse_code=noop,
        ),
        migrations.AddField(
            model_name='challengeprocess',
            name='started',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='challenge',
            name='end_time',
            field=models.DateTimeField(default=datetime.datetime(2020, 6, 8, 10, 22, 56, 493314, tzinfo=utc), verbose_name='no longer available after'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='challenge',
            name='start_time',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='available from this time'),
        ),
        migrations.RemoveField(
            model_name='challengeprocess',
            name='port',
        ),
        migrations.DeleteModel(
            name='Port',
        ),
        migrations.AddField(
            model_name='challenge',
            name='listen_ports',
            field=models.JSONField(default=1337, verbose_name='Ports exposed by this container'),
            preserve_default=False,
        ),
    ]
